# MIDI Test by Mike Cook March 2021
# sends "The Blue Danube" from the Trill Guitar
from machine import UART
from machine import Pin
import time

tune = [("The Blue Danube", 1.0, 1), (256,60,73), (512,64,77), (517,60,0), (768,67,76), (773,64,0),
 (1011,67,0), (1024,67,72), (1024,48,46), (1280,48,0), (1280,52,54), (1280,55,54),
 (1536,67,0), (1536,76,80), (1536,79,80), (1536,52,0), (1536,55,0), (1536,52,50),
 (1536,55,50), (1792,76,0), (1792,79,0), (1792,76,73), (1792,79,73), (1792,52,0),
 (1792,55,0), (1792,48,49), (2048,48,0), (2048,52,50), (2048,55,50), (2304,76,0),
 (2304,79,0), (2304,72,70), (2304,76,70), (2304,52,0), (2304,55,0), (2304,52,50),
 (2304,55,50), (2560,72,0), (2560,76,0), (2560,72,72), (2560,76,72), (2560,52,0),
 (2560,55,0), (2560,48,50), (2816,48,0), (2816,52,52), (2816,55,52), (3072,72,0),
 (3072,76,0), (3072,60,63), (3072,52,0), (3072,55,0), (3072,52,54), (3072,55,54),
 (3328,60,0), (3328,60,72), (3328,52,0), (3328,55,0), (3328,48,50), (3584,64,75),
 (3584,48,0), (3584,52,56), (3584,55,56), (3589,60,0), (3840,67,77), (3840,52,0),
 (3840,55,0), (3840,52,54), (3840,55,54), (3845,64,0), (4083,67,0), (4096,67,75),
 (4096,52,0), (4096,55,0), (4096,50,51), (4352,50,0), (4352,53,56), (4352,55,56),
 (4608,67,0), (4608,77,83), (4608,79,83), (4608,53,0), (4608,55,0), (4608,53,57),
 (4608,55,57), (4864,77,0), (4864,79,0), (4864,77,76), (4864,79,76), (4864,53,0),
 (4864,55,0), (4864,50,54), (5120,50,0), (5120,53,54), (5120,55,54), (5376,77,0),
 (5376,79,0), (5376,71,73), (5376,77,73), (5376,53,0), (5376,55,0), (5376,53,57),
 (5376,55,57), (5632,71,0), (5632,77,0), (5632,71,76), (5632,77,76), (5632,53,0),
 (5632,55,0), (5632,50,52), (5888,50,0), (5888,53,58), (5888,55,58), (6144,71,0),
 (6144,77,0), (6144,59,71), (6144,53,0), (6144,55,0), (6144,53,57), (6144,55,57),
 (6400,59,0), (6400,59,76), (6400,53,0), (6400,55,0), (6400,50,55), (6656,62,81),
 (6656,50,0), (6656,53,60), (6656,55,60), (6661,59,0), (6912,69,86), (6912,53,0),
 (6912,55,0), (6912,53,58), (6912,55,58), (6917,62,0), (7155,69,0), (7168,69,78),
 (7168,53,0), (7168,55,0), (7168,47,56), (7424,47,0), (7424,53,62), (7424,55,62),
 (7680,69,0), (7680,77,88), (7680,81,88), (7680,53,0), (7680,55,0), (7680,53,58),
 (7680,55,58), (7936,77,0), (7936,81,0), (7936,77,79), (7936,81,79), (7936,53,0),
 (7936,55,0), (7936,47,56), (8192,47,0), (8192,53,61), (8192,55,61), (8448,77,0),
 (8448,81,0), (8448,71,73), (8448,77,73), (8448,53,0), (8448,55,0), (8448,53,58),
 (8448,55,58), (8704,71,0), (8704,77,0), (8704,71,78), (8704,77,78), (8704,53,0),
 (8704,55,0), (8704,47,57), (8960,47,0), (8960,53,64), (8960,55,64), (9216,71,0),
 (9216,77,0), (9216,59,75), (9216,53,0), (9216,55,0), (9216,53,62), (9216,55,62),
 (9472,59,0), (9472,59,80), (9472,53,0), (9472,55,0), (9472,47,58), (9728,62,83),
 (9728,47,0), (9728,53,63), (9728,55,63), (9733,59,0), (9984,69,88), (9984,53,0),
 (9984,55,0), (9984,53,62), (9984,55,62), (9989,62,0), (10227,69,0), (10240,69,82),
 (10240,53,0), (10240,55,0), (10240,48,57), (10496,48,0), (10496,52,63), (10496,55,63),
 (10752,69,0), (10752,76,92), (10752,81,92), (10752,52,0), (10752,55,0), (10752,52,61),
 (10752,55,61), (11008,76,0), (11008,81,0), (11008,76,85), (11008,81,85), (11008,52,0),
 (11008,55,0), (11008,48,60), (11264,48,0), (11264,52,64), (11264,55,64), (11520,76,0),
 (11520,81,0), (11520,72,77), (11520,76,77), (11520,52,0), (11520,55,0), (11520,52,65),
 (11520,55,65), (11776,72,0), (11776,76,0), (11776,72,81), (11776,76,81), (11776,52,0),
 (11776,55,0), (11776,48,59), (12032,48,0), (12032,52,66), (12032,55,66), (12288,72,0),
 (12288,76,0), (12288,60,74), (12288,52,0), (12288,55,0), (12288,52,65), (12288,55,65),
 (12544,60,0), (12544,60,83), (12544,52,0), (12544,55,0), (12544,48,60), (12800,64,89),
 (12800,48,0), (12800,52,67), (12800,55,67), (12805,60,0), (13056,67,87), (13056,52,0),
 (13056,55,0), (13056,52,65), (13056,55,65), (13061,64,0), (13299,67,0), (13312,72,90),
 (13312,52,0), (13312,55,0), (13312,52,64), (13568,52,0), (13568,55,69), (13568,60,69),
 (13824,72,0), (13824,79,98), (13824,84,98), (13824,55,0), (13824,60,0), (13824,55,67),
 (13824,60,67), (14080,79,0), (14080,84,0), (14080,79,87), (14080,84,87), (14080,55,0),
 (14080,60,0), (14080,52,64), (14336,52,0), (14336,55,72), (14336,60,72), (14592,79,0),
 (14592,84,0), (14592,76,83), (14592,79,83), (14592,55,0), (14592,60,0), (14592,55,66),
 (14592,60,66), (14848,76,0), (14848,79,0), (14848,76,91), (14848,79,91), (14848,55,0),
 (14848,60,0), (14848,52,63), (15104,52,0), (15104,55,71), (15104,60,71), (15360,76,0),
 (15360,79,0), (15360,60,78), (15360,55,0), (15360,60,0), (15360,55,68), (15360,60,68),
 (15616,60,0), (15616,60,91), (15616,55,0), (15616,60,0), (15616,52,63), (15872,64,98),
 (15872,52,0), (15872,55,76), (15872,60,76), (15877,60,0), (16128,67,101), (16128,55,0),
 (16128,60,0), (16128,55,68), (16128,60,68), (16133,64,0), (16371,67,0), (16384,72,98),
 (16384,55,0), (16384,60,0), (16384,53,64), (16640,53,0), (16640,57,78), (16640,62,78),
 (16896,72,0), (16896,81,107), (16896,84,107), (16896,57,0), (16896,62,0), (16896,57,69),
 (16896,62,69), (17152,81,0), (17152,84,0), (17152,81,96), (17152,84,96), (17152,57,0),
 (17152,62,0), (17152,53,66), (17408,53,0), (17408,57,77), (17408,62,77), (17664,81,0),
 (17664,84,0), (17664,77,93), (17664,81,93), (17664,57,0), (17664,62,0), (17664,57,71),
 (17664,62,71), (17920,77,0), (17920,81,0), (17920,77,100), (17920,81,100), (17920,57,0),
 (17920,62,0), (17920,53,69), (17920,57,69), (17920,62,69), (18432,77,0), (18432,81,0),
 (18432,62,84), (18432,53,0), (18432,57,0), (18432,62,0), (18432,50,69), (18688,62,0),
 (18688,62,95), (18688,50,0), (18688,50,71), (18944,65,99), (18944,50,0), (18944,53,72),
 (18949,62,0), (19200,69,103), (19200,53,0), (19200,57,75), (19205,65,0), (19443,69,0),
 (19456,69,94), (19456,57,0), (19456,50,66), (19712,50,0), (19712,53,73), (19712,55,73),
 (19968,53,0), (19968,55,0), (19968,53,70), (19968,55,70), (20224,53,0), (20224,55,0),
 (20224,43,65), (20480,69,0), (20480,66,94), (20480,43,0), (20480,53,72), (20480,55,72),
 (20736,67,97), (20736,53,0), (20736,55,0), (20736,53,72), (20736,55,72), (20741,66,0),
 (20979,67,0), (20992,76,106), (20992,53,0), (20992,55,0), (20992,48,69), (21248,48,0),
 (21248,52,75), (21248,55,75), (21504,52,0), (21504,55,0), (21504,52,72), (21504,55,72),
 (21760,52,0), (21760,55,0), (21760,52,70), (22016,76,0), (22016,72,90), (22016,52,0),
 (22016,55,77), (22016,60,77), (22272,64,81), (22272,55,0), (22272,60,0), (22272,55,71),
 (22272,60,71), (22277,72,0), (22515,64,0), (22528,64,98), (22528,55,0), (22528,60,0),
 (22528,53,71), (22528,57,71), (22528,60,71), (23040,62,95), (23050,64,0), (23283,62,0),
 (23296,69,107), (23296,53,0), (23296,57,0), (23296,60,0), (23296,53,70), (23296,55,70),
 (23296,59,70), (23808,67,104), (23818,69,0), (24051,67,0), (24064,60,88), (24064,53,0),
 (24064,55,0), (24064,59,0), (24064,48,70), (24064,52,70), (24064,55,70), (24448,72,99),
 (24455,60,0), (24569,72,0), (24576,72,122), (24576,48,0), (24576,52,0), (24576,55,0),
 (24576,48,84), (24576,52,84), (24576,55,84), (24832,72,0), (24832,72,117), (24832,48,0),
 (24832,52,0), (24832,55,0), (24832,48,86), (24832,52,86), (24832,55,86), (25088,72,0),
 (25088,48,0), (25088,52,0), (25088,55,0)]

# global variables
cmd3 = bytearray(3)
cmd2 = bytearray(2)
channel = 0
voice = 0
bank = 0
port = UART(1, 31250, tx=Pin(8), rx=None) # no recieve

def changeVoice():
    #print("changing voice", voice, bank, "on channel", channel)
    cmd3[0] = 0xB0 | channel
    cmd3[1] = 0x00 # write bank msb
    cmd3[2] = 0x00 # always zero for genral MIDI
    port.write(cmd3)
    cmd3[1] = 0x20 # LSB of bank address
    cmd3[2] = bank
    port.write(cmd3)
    cmd2[0] = 0xC0 | channel # program change
    cmd2[1] = voice # new voice number
    port.write(cmd2)

def sendNoteOn(note, vel):
    cmd3[0] = 0x90 | channel
    cmd3[1] = note
    cmd3[2] = vel
    port.write(cmd3)
    
def sendNoteOff(note, vel):
    cmd3[0] = 0x80 | channel
    cmd3[1] = note
    cmd3[2] = vel
    port.write(cmd3)
        
def main():
    global voice
    changeVoice()
    startTime = time.ticks_ms()
    tempo = tune[0][1]
    play = 1
    print("Now playing", tune[0][0], "with MIDI voice", voice) 
    while(1):
        soFar = time.ticks_ms()
        #print(time.ticks_diff(soFar, startTime ), (tune[play][0]))
        if time.ticks_diff(soFar, startTime ) >= (tune[play][0]* tempo) :
            #print(time.time()- startTime)
            sendNoteOn(tune[play][1], tune[play][2])
            #print(tune[play])
            play += 1
            if play >= len(tune):
                play = 1
                time.sleep(2.0)
                voice = (voice + 1) & 0x7f # wrap round again if you can stand it
                changeVoice()
                print("Now playing", tune[0][0], "with MIDI voice", voice)
                startTime = time.ticks_ms()

# Main program logic:
if __name__ == '__main__':    
    main()